var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SpgpGpu","category":"page"},{"location":"#SpgpGpu","page":"Home","title":"SpgpGpu","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SpgpGpu.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SpgpGpu]","category":"page"},{"location":"#SpgpGpu.predict","page":"Home","title":"SpgpGpu.predict","text":"predict(y, x, xb, xt, hyp, ∇)\n\npredictive distribution for SPGP given hyperparameters and pseudo-inputs\n\ny -- training targets (N x 1)\nx -- training inputs (N x dim)\nxb -- pseudo inputs (n x dim)\nxt -- test inputs (Nt x dim)\nhyp -- hyperparameters (including noise)\n       for Gaussian covariance: (dim+2 x 1)\n       \n      hyp(1:dim) = log( b )\n      hyp(dim+1) = log( c )\n      hyp(dim+2) = log( sig )\n\n     where cov = c * exp[-0.5 * sum_d b_d * (x_d - x'_d)^2] \n                     + sig * delta(x,x')\n\n∇ -- OPTIONAL jitter (default 1e-6)\nμ -- predictive mean\nσ² -- predictive variance of latent function\n      (add noise if full variance is required)\n\n\n\n\n\n","category":"function"}]
}
